---

- block:

  - name: (FreeBSD) Install certbot
    pkgng:
      name: py27-certbot
      state: present

  - name: (FreeBSD) Add cron job for 'certbot-auto renew'
    cron:
      name: Certbot automatic renewal.
      job: "certbot renew --quiet --standalone {{ ssl_certbot_nginx_hooks }}"
      special_time: daily
    when: ssl_certbot_nginx

  when: ansible_os_family == "FreeBSD"

- block:

  - name: (Debian) Install certbot
    apt:
      name: certbot
      state: latest
      update_cache: yes

  - name: (Debian) Add cron job for 'certbot-auto renew'
    cron:
      name: Certbot automatic renewal.
      job: "certbot renew --quiet --standalone {{ ssl_certbot_nginx_hooks }}"
      special_time: daily
    when: ssl_certbot_nginx

  when: ansible_os_family == "Debian"

- name: Add cron job for 'certbot-auto renew'
  cron:
    name: Certbot automatic renewal.
    job: "certbot renew --quiet --standalone"
    special_time: daily
  when: not ssl_certbot_nginx

- name: "Check if we've generated certificates already"
  stat:
    path: "{{ item.path }}/fullchain.pem"
  register: ssl_certbot_certs_stats
  with_items: "{{ ssl_certbot_certs | default([]) }}"

- name: Stopping Nginx before running certbot
  service:
    name: nginx
    state: stopped
  when: ssl_certbot_nginx and ssl_certbot_certs_stats|json_query('results[?stat.exists==`false`]') != []
  register: ssl_certbot_nginx_stopped

- name: Generate certbot SSL certificates
  shell: "certbot certonly --standalone --email {{ ssl_certbot_email }} --debug --non-interactive --agree-tos --expand --cert-name {{ item.item.domain }} -d {{ item.item.domain }}"
  when: not item.stat.exists
  with_items: "{{ ssl_certbot_certs_stats.results }}"

- name: Create SSL directories
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0600
    owner: root
  with_items: "{{ ssl_certbot_certs | default([]) }}"

- name: "Check if we've generated dhparams already"
  stat:
    path: "{{ item.path }}/dhparam.pem"
  register: ssl_certbot_dhparam_stats
  with_items: "{{ ssl_certbot_certs | default([]) }}"

- name: Generate dhparam
  shell: "openssl dhparam -out {{ item.item.path }}/dhparam.pem {{ ssl_dhparam_size }}"
  when: not item.stat.exists
  with_items: "{{ ssl_certbot_dhparam_stats.results }}"

- name: Starting Nginx after running certbot
  service:
    name: nginx
    state: started
  when: ssl_certbot_nginx_stopped
